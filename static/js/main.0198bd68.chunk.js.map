{"version":3,"sources":["logo.svg","components/NavBar.js","components/Footer.js","components/WeatherApp.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","src","logo","alt","to","type","id","placeholder","defaultProps","title","About","Footer","Date","getFullYear","WeatherApp","style","width","error","role","city","weatherIcon","celsius","min","temp_min","max","temp_max","feel_like","main","description","speed","pressure","humidity","visibility","onSubmit","loadWeather","name","class","cityName","App","apiKey","process","REACT_APP_WEATHER_API","useState","Thunderstrom","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","setWeatherIcon","undefined","setCity","country","setMain","setCelsius","setTemp_max","setTemp_min","setFeel_like","setDescription","setHumidity","setPressure","setSpeed","setVisibility","setError","calCelsious","temp","Math","floor","get_weatherIcon","icons","rangeID","weatherUpdate","e","a","preventDefault","target","elements","value","url","fetch","data","json","parsedData","sys","feels_like","weather","wind","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0198bd68.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"../logo.svg\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-dark glassFooter`}>\r\n      <div className=\"container-fluid\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n            React Weather App\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Contact Us\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n          \r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  About: PropTypes.string,  \r\n};\r\nNavbar.defaultProps = {\r\n  title: 'Site Title',\r\n  About: 'About',\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nconst Footer = () => {\r\n\r\n    return (\r\n<footer className=\"footer-area\">\r\n    <div className=\"Container text-center text-white py-4 mt-3 glassFooter\">\r\n    <span>React Weather App By </span>\r\n    <Link className=\"text-danger text-decoration-none fs-5\" aria-current=\"page\" to=\"/\">ASIF JAVED</Link>\r\n    <span> &reg; {new Date().getFullYear()}</span>\r\n     \r\n    </div>\r\n</footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst WeatherApp = (props) => {\r\n\r\n    function minmaxtemp(min, max) {\r\n        return (\r\n            <ul className=\"text-white\">\r\n                <li>Min-temp : <span className=\"px-1\">{min ? min :'0'}&deg;</span></li>\r\n                <li>Max-temp : <span className=\"px-1\">{max ? max : '0'}&deg;</span></li>\r\n            </ul>\r\n        )\r\n    }\r\n    function error(){\r\n        return(\r\n          <div className=\"alert mx-5 text-white fs-5\" role=\"alert\">\r\n            Please Enter city and Country!!\r\n          </div>\r\n        )\r\n      }\r\n    return (\r\n        <>\r\n            <div className=\"container my-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card glass\" style={{ width: '30rem' }}>\r\n                            <div className=\"card-body\">\r\n                                <div>{props.error ? error() : null}</div>\r\n                                <h1 className=\"card-title text-danger\">{props.city}</h1>\r\n                                <h3 className=\"card-title text-white\">\r\n                                    <i className={`wi ${props.weatherIcon} display-4`}></i>&nbsp;\r\n                                    <span>{props.celsius ? props.celsius : '0'}&deg;C</span>\r\n                                </h3>\r\n                                {minmaxtemp(props.temp_min, props.temp_max)}\r\n                                {props.feel_like ? (<strong className=\"card-text text-danger\">Feels like {props.feel_like}&deg;C. {props.main}. {props.description} </strong>): null}\r\n                                <ul data-v-3208ab85=\"\" data-v-3e6e9f12=\"\" className=\"text-white weather-items text-container orange-side standard-padding\">\r\n                                    <li>{props.speed}m/s</li>\r\n                                    <li>{props.pressure}hPa</li>\r\n                                    <li>Humidity : {props.humidity}%</li>\r\n                                    <li>Visibility : {props.visibility}km</li>\r\n                                </ul>\r\n                                <form onSubmit={props.loadWeather}>\r\n                                    <div className=\"mb-3 input-data d-flex\">\r\n                                        <input type=\"text\" name=\"city\" class=\"form-now m-2 text-white\" placeholder=\"City\" />\r\n                                        <input type=\"text\" name=\"country\" class=\"form-now m-2 text-white\" placeholder=\"Country\" />\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn btn-danger\">Get Weather</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                  \r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nWeatherApp.defaultProps = {\r\n    cityName: 'wah',\r\n}\r\nWeatherApp.propTypes = {\r\n    cityName: PropTypes.string,\r\n}\r\n\r\nexport default WeatherApp\r\n","import './App.css';\nimport React, { useEffect, useState } from 'react'\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport WeatherApp from './components/WeatherApp';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"weather-icons/css/weather-icons.css\";\n\nconst App = () => {\n  const apiKey = process.env.REACT_APP_WEATHER_API\n  const [weatherIcon, setWeatherIcon] = useState({\n        Thunderstrom  : \"wi-thunderstorm\",\n        Drizzle       : \"wi-sleet\",\n        Rain          : \"wi-storm-showers\",\n        Snow          : \"wi-snow\",\n        Atmosphere    : \"wi-fog\",\n        Clear         : \"wi-day-sunny\",\n        Clouds        : \"wi-day-fog\",\n  });\n  const [city, setCity] = useState(undefined);\n  const [country, setCountry] = useState(undefined);\n  const [icon, setIcon] = useState(undefined);\n  const [main, setMain] = useState(undefined);\n  const [celsius, setCelsius] = useState(undefined);\n  const [temp_max, setTemp_max] = useState(undefined);\n  const [temp_min, setTemp_min] = useState(undefined);\n  const [feel_like, setFeel_like] = useState(undefined);\n  const [description, setDescription] = useState(undefined);\n  const [humidity, setHumidity] = useState(undefined);\n  const [pressure, setPressure] = useState(undefined);\n  const [speed, setSpeed] = useState(undefined);\n  const [visibility, setVisibility] = useState(undefined);\n  const [error, setError] = useState(false);\n\n  function calCelsious(temp){\n    let cell =Math.floor(temp-273.15)\n    return cell;\n  }\n  function get_weatherIcon(icons,rangeID){\n    switch(true){\n      case rangeID >= 200 && rangeID <=232:\n        setWeatherIcon(weatherIcon.Thunderstrom);\n        break;\n      case rangeID >= 300 && rangeID <=321:\n        setWeatherIcon(weatherIcon.Drizzle);\n        break;\n      case rangeID >= 500 && rangeID <=531:\n        setWeatherIcon(weatherIcon.Rain);\n        break;\n      case rangeID >= 600 && rangeID <=622:\n        setWeatherIcon(weatherIcon.Snow);\n        break;\n      case rangeID >= 701 && rangeID <=781:\n        setWeatherIcon(weatherIcon.Atmosphere);\n        break;\n      case rangeID === 800 :\n        setWeatherIcon(weatherIcon.Clear);\n        break;\n      case rangeID >= 801 && rangeID <=804:\n        setWeatherIcon(weatherIcon.Clouds);\n        break;\n        default:\n        setWeatherIcon(weatherIcon.Clouds);\n    }\n  }\n  const weatherUpdate= async (e)=>{\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    if(city && country){\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=56b84b16d9ef917f11d625dd45d8a46f`;\n    let data = await fetch(url);\n    let parsedData = await data.json();\n        setCity(`${parsedData.name},${parsedData.sys.country}`);\n        // setCountry(parsedData.sys.country);\n        setCelsius(calCelsious(parsedData.main.temp));\n        setTemp_max(calCelsious(parsedData.main.temp_max));\n        setTemp_min(calCelsious(parsedData.main.temp_min));\n        setFeel_like(calCelsious(parsedData.main.feels_like));\n        setDescription(parsedData.weather[0].description);\n        setMain(parsedData.weather[0].main);\n        setHumidity(parsedData.main.humidity);\n        setPressure(parsedData.main.pressure);\n        setSpeed(parsedData.wind.speed);\n        setVisibility(parsedData.visibility);\n\n        get_weatherIcon(weatherIcon,parsedData.weather[0].id);\n        console.log(parsedData);\n    }else{\n      setError(true);\n    }\n  }\n//   useEffect(() => {\n//     // weatherUpdate();\n// }, []);\n\n  return (\n    <div>\n      <Router>\n        <NavBar class=\"nav-link active\" />\n        <WeatherApp apiKey={apiKey}\n        city={city}\n        country={country}\n        celsius={celsius}\n        temp_max={temp_max}\n        temp_min={temp_min}\n        description={description}\n        feel_like={feel_like}\n        main={main}\n        humidity={humidity}\n        pressure={pressure}\n        speed={speed}\n        visibility={visibility/1000}\n        weatherIcon={weatherIcon}\n        loadWeather={weatherUpdate}\n        error={error}\n        />\n        <Footer />\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}